{
  "name": "SpeedTyping",
  "tagline": "",
  "body": "## Part 1: \"Hello world\" and setting up an environment\r\n \r\nFirst of all, let's install [Webstorm](https://www.jetbrains.com/webstorm/) Javascript IDE as an editor for our project, which is a very convenient tool for developing js applications and has ES6 syntax support. \r\nNext step is to install node.js. As I am a windows user, I have installed it from [here](https://nodejs.org/en/download/) and nvm (Node version manager) - from [here](https://github.com/coreybutler/nvm-windows). Note that, first you need to install node and then nvm.\r\n\r\nNow, let's create a new blank(empty) project from Webstorm. If we want to check that node.js is correctly installed, run Webstorm terminal (alt + F12) and check with entering a command `node -v` and `nvm -v`. \r\n\r\nNow, to set up dependecies, we need to run `npm init`\r\nThis will ask you some questions, and then write a package.json for you. In the end the package.json looks like this:\r\n\r\n    {\r\n      \"name\": \"speedtyping\",\r\n      \"version\": \"1.0.0\",\r\n      \"description\": \"\",\r\n      \"main\": \"index.js\",\r\n      \"dependencies\": {},\r\n      \"devDependencies\": {},\r\n      \"scripts\": {\r\n        \"test\": \"echo \\\"Error: no test specified\\\" && exit 1\"\r\n      },\r\n      \"author\": \"\",\r\n      \"license\": \"ISC\"\r\n    }\r\n\r\nThe assets must be transpiled and bundled by a modern bundler, so we will use [Webpack](http://webpack.github.io/) bundler for this. Webpack combines all javascript files and produces(transpiles) them into one (bundle.js) which can be understood by browsers. It also provides a development server to run the code in development environment. This server watches all files and bundles the project again on every change. To install webpack and webpack development server, run following commands: `npm install webpack --save` and `npm install webpack-dev-server --save`. After that you will notice that node_modules folder is generated in the project, which consists of all libraries what is needed for webpack. And also you will notice that two lines(    `\"webpack\": \"^1.12.14\", \"webpack-dev-server\": \"^1.14.1\"`) will be added to package.json dependecies. Note that, other developers do not need to run commands for webpack installation again once we have them in package.json, all they do is just `npm install` and webpack will be installed automatically. \r\nTo run the code with npm start, we need to add following line to \"scripts\" in package.json: `\"start\": \"webpack-dev-server\"`.\r\n\r\nAfter that we already are able to run a code on the server, which displays just the folders and files we have in a project. \r\nNow we are ready to create a simple \"Hello world\" app. Let's create index.html file with following html code:\r\n\r\n    <!DOCTYPE html>\r\n    <html lang=\"en\">\r\n    <head>\r\n        <meta charset=\"UTF-8\">\r\n        <title>Title</title>\r\n    </head>\r\n    <body>\r\n        Data not from DOM manipulation\r\n        <script type=\"text/javascript\" src=\"bundle.js\"></script>\r\n    </body>\r\n\r\n    </html>\r\n\r\nNote that, we do not have bundle.js yet, it will be generated by webpack on the server after transpiling the code.\r\nNow we create three javascript files (in js folder), just to have a simple application. First one is hello.js which just manipulates DOM in index.html and puts \"Hello world\" in the body:\r\n\r\n    var hello = function(){\r\n        document.body.innerHTML = \"Hello World!\";\r\n    }\r\n\r\n    module.exports = hello\r\n\r\nSecond one is robot.js which corresponds the class Robot and has a method which prints some text in a console:\r\n\r\n    class Robot {\r\n        beep() {\r\n            console.log(\"beep\");\r\n            console.log(\"boop\");\r\n        };\r\n    }\r\n\r\n    module.exports = Robot;\r\n\r\nAnd the last javascript file is the main one (main.js) which requires hello.js file and robot.js files and calls their methods:\r\n\r\n    var hello = require(\"./hello.js\")\r\n    hello()\r\n\r\n    var Robot = require('./robot');\r\n    var robot = new Robot();\r\n    robot.beep()\r\n\r\n\r\n\r\n\r\nTo configure webpack, create webpack.config.js file in root folder of the project and put following code: \r\n\r\nmodule.exports = {\r\n    entry: './js/main.js',\r\n    output: {\r\n        filename: 'bundle.js'\r\n    },\r\n    devServer: {\r\n        port: 3000\r\n    }\r\n};\r\n\r\nNow create js folder and main.js \r\n\r\n\r\n\r\n\r\n",
  "google": "",
  "note": "Don't delete this file! It's used internally to help with page regeneration."
}